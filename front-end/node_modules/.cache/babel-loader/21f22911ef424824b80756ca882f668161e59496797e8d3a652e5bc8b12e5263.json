{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\husam\\\\Desktop\\\\arc gis task\\\\newinfograph\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './styles.css';\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { Icon, divIcon, point } from \"leaflet\";\nimport MarkerClusterGroup from 'react-leaflet-cluster';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/maps');\n      setData(response.data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData(); // Fetch initial data when the component mounts\n  }, []);\n\n  // create custom icon\n  const customIcon = new Icon({\n    // iconUrl: \"https://cdn-icons-png.flaticon.com/512/447/447031.png\",\n    iconUrl: require(\"./img/google-maps.png\"),\n    iconSize: [38, 38] // size of the icon\n  });\n\n  // markers\n  const markers = [{\n    geocode: [48.86, 2.3522],\n    popUp: \"Hello, I am pop up 1\"\n  }, {\n    geocode: [48.85, 2.3522],\n    popUp: \"Hello, I am pop up 2\"\n  }, {\n    geocode: [48.855, 2.34],\n    popUp: \"Hello, I am pop up 3\"\n  }];\n  // ============= custom cluster icon ================\n  // custom cluster icon\n  // const createClusterCustomIcon = function (cluster) {\n  //   return new divIcon({\n  //     html: `<span class=\"cluster-icon\">${cluster.getChildCount()}</span>`,\n  //     className: \"custom-marker-cluster\",\n  //     iconSize: point(33, 33, true)\n  //   });\n  // };\n  // =========== custom cluster icon ===============\n  return (\n    /*#__PURE__*/\n    // <div className='App'>\n    //   <h1>hallo</h1>\n    //   <h1>hallo</h1>\n    // </div>\n    _jsxDEV(MapContainer, {\n      center: [48.8566, 2.3522],\n      zoom: 13,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup\n      // =========== custom cluster icon ===============\n      // chunkedLoading\n      // iconCreateFunction={createClusterCustomIcon}\n      // =========== custom cluster icon ===============\n      , {\n        children: markers.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n          position: marker.geocode,\n          icon: customIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: marker.popUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n_s(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","Icon","divIcon","point","MarkerClusterGroup","jsxDEV","_jsxDEV","App","_s","fetchData","response","axios","get","setData","data","error","console","useEffect","customIcon","iconUrl","require","iconSize","markers","geocode","popUp","center","zoom","children","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","map","marker","position","icon","_c","$RefreshReg$"],"sources":["C:/Users/husam/Desktop/arc gis task/newinfograph/src/App.js"],"sourcesContent":["import React from 'react'\nimport './styles.css';\nimport \"leaflet/dist/leaflet.css\";\n\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { Icon, divIcon, point } from \"leaflet\";\nimport MarkerClusterGroup from 'react-leaflet-cluster';\n\n\n\n\nexport default function App() {\n\n\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/maps');\n      setData(response.data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n\n  useEffect(() => {\n    fetchData(); // Fetch initial data when the component mounts\n  }, []);\n\n\n\n\n\n  // create custom icon\n  const customIcon = new Icon({\n    // iconUrl: \"https://cdn-icons-png.flaticon.com/512/447/447031.png\",\n    iconUrl: require(\"./img/google-maps.png\"),\n    iconSize: [38, 38] // size of the icon\n  });\n\n  \n  \n  // markers\n  const markers = [\n    {\n      geocode: [48.86, 2.3522],\n      popUp: \"Hello, I am pop up 1\"\n    },\n    {\n      geocode: [48.85, 2.3522],\n      popUp: \"Hello, I am pop up 2\"\n    },\n    {\n      geocode: [48.855, 2.34],\n      popUp: \"Hello, I am pop up 3\"\n    }\n  ];\n  // ============= custom cluster icon ================\n  // custom cluster icon\n  // const createClusterCustomIcon = function (cluster) {\n  //   return new divIcon({\n  //     html: `<span class=\"cluster-icon\">${cluster.getChildCount()}</span>`,\n  //     className: \"custom-marker-cluster\",\n  //     iconSize: point(33, 33, true)\n  //   });\n  // };\n  // =========== custom cluster icon ===============\n  return (\n    // <div className='App'>\n    //   <h1>hallo</h1>\n    //   <h1>hallo</h1>\n    // </div>\n    <MapContainer center={[48.8566, 2.3522]} zoom={13}>\n      {/* OPEN STREEN MAPS TILES */}\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n      />\n      {/* <TileLayer\n        attribution='topography'\n        url='https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png'\n      /> */}\n\n      <MarkerClusterGroup\n      // =========== custom cluster icon ===============\n      // chunkedLoading\n      // iconCreateFunction={createClusterCustomIcon}\n      // =========== custom cluster icon ===============\n      >\n\n        {markers.map((marker) => (\n          <Marker position={marker.geocode} icon={customIcon} >\n            <Popup>{marker.popUp}</Popup>\n          </Marker>\n        ))}\n      </MarkerClusterGroup>\n\n    </MapContainer>\n  )\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import logo from './logo.svg';\n// import './App.css';\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}