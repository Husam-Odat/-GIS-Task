{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\husam\\\\Desktop\\\\arc gis task\\\\newinfograph\\\\src\\\\App1.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useState, useRef, useCallback, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\nimport Form from './Form';\nimport { Icon } from \"leaflet\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst center = [31.951591711679697, 35.93934368582822];\nconst zoom = 19;\nexport default function MapWithMarkers() {\n  _s();\n  const [data, setData] = useState([]);\n  const [markers, setMarkers] = useState([]);\n  const [position, setPosition] = useState(center);\n  const mapRef = useRef();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/maps');\n        setData(response.data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchData();\n  }, []); // Only run once when the component mounts\n\n  useEffect(() => {\n    const newMarkers = data.map(item => ({\n      geocode: [item.LAT, item.LNG],\n      popUp: item.Notes // Use item.Notes for popup content\n    }));\n\n    setMarkers(newMarkers);\n  }, [data]);\n  const customIcon = new Icon({\n    iconUrl: require(\"./img/google-maps.png\"),\n    iconSize: [38, 38]\n  });\n  const handleResetClick = () => {\n    if (mapRef.current) {\n      mapRef.current.setView(center, zoom);\n    }\n  };\n  const handleMapMove = () => {\n    if (mapRef.current) {\n      setPosition(mapRef.current.getCenter());\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"suctionMap\",\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: center,\n      zoom: zoom,\n      ref: mapRef,\n      onMove: handleMapMove,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        children: markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: marker.geocode,\n          icon: customIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: marker.popUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [position && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"Latitude: \", position.lat.toFixed(4), \", Longitude: \", position.lng.toFixed(4), \" \"]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetClick,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      lat: position.lat.toFixed(4),\n      long: position.lng.toFixed(4)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n_s(MapWithMarkers, \"+BmaNWtEj6M/CHfaK/2fkY04+14=\");\n_c = MapWithMarkers;\nvar _c;\n$RefreshReg$(_c, \"MapWithMarkers\");","map":{"version":3,"names":["useState","useRef","useCallback","useEffect","MapContainer","TileLayer","Marker","Popup","MarkerClusterGroup","Form","Icon","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","center","zoom","MapWithMarkers","_s","data","setData","markers","setMarkers","position","setPosition","mapRef","fetchData","response","get","error","console","newMarkers","map","item","geocode","LAT","LNG","popUp","Notes","customIcon","iconUrl","require","iconSize","handleResetClick","current","setView","handleMapMove","getCenter","className","children","ref","onMove","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","marker","index","icon","lat","toFixed","lng","onClick","long","_c","$RefreshReg$"],"sources":["C:/Users/husam/Desktop/arc gis task/newinfograph/src/App1.js"],"sourcesContent":["import \"./styles.css\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { useState, useRef, useCallback, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\r\nimport Form from './Form';\r\nimport { Icon } from \"leaflet\";\r\nimport axios from 'axios';\r\n\r\nconst center = [31.951591711679697, 35.93934368582822];\r\nconst zoom = 19;\r\n\r\nexport default function MapWithMarkers() {\r\n    const [data, setData] = useState([]);\r\n    const [markers, setMarkers] = useState([]);\r\n    const [position, setPosition] = useState(center);\r\n    const mapRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3001/maps');\r\n                setData(response.data);\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []); // Only run once when the component mounts\r\n\r\n    useEffect(() => {\r\n        const newMarkers = data.map((item) => ({\r\n            geocode: [item.LAT, item.LNG],\r\n            popUp: item.Notes, // Use item.Notes for popup content\r\n        }));\r\n        setMarkers(newMarkers);\r\n    }, [data]);\r\n\r\n    const customIcon = new Icon({\r\n        iconUrl: require(\"./img/google-maps.png\"),\r\n        iconSize: [38, 38],\r\n    });\r\n\r\n    const handleResetClick = () => {\r\n        if (mapRef.current) {\r\n            mapRef.current.setView(center, zoom);\r\n        }\r\n    };\r\n\r\n    const handleMapMove = () => {\r\n        if (mapRef.current) {\r\n            setPosition(mapRef.current.getCenter());\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"suctionMap\">\r\n            <MapContainer\r\n                center={center}\r\n                zoom={zoom}\r\n                ref={mapRef}\r\n                onMove={handleMapMove}\r\n            >\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                <MarkerClusterGroup>\r\n                    {markers.map((marker, index) => (\r\n                        <Marker key={index} position={marker.geocode} icon={customIcon}>\r\n                            <Popup>{marker.popUp}</Popup>\r\n                        </Marker>\r\n                    ))}\r\n                </MarkerClusterGroup>\r\n            </MapContainer>\r\n            <p>\r\n                {position && (\r\n                    <>Latitude: {position.lat.toFixed(4)}, Longitude: {position.lng.toFixed(4)} </>\r\n                )}\r\n                <button onClick={handleResetClick}>Reset</button>\r\n            </p>\r\n            <Form lat={position.lat.toFixed(4)} long={position.lng.toFixed(4)} />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAO,cAAc;AACrB,OAAO,0BAA0B;AACjC,SAASA,QAAQ,EAAEC,MAAM,EAAEC,WAAW,EAAEC,SAAS,QAAQ,OAAO;AAChE,SAASC,YAAY,EAAEC,SAAS,EAAEC,MAAM,EAAEC,KAAK,QAAQ,eAAe;AACtE,OAAOC,kBAAkB,MAAM,uBAAuB;AACtD,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,IAAI,QAAQ,SAAS;AAC9B,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,MAAM,GAAG,CAAC,kBAAkB,EAAE,iBAAiB,CAAC;AACtD,MAAMC,IAAI,GAAG,EAAE;AAEf,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACwB,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAACgB,MAAM,CAAC;EAChD,MAAMU,MAAM,GAAGzB,MAAM,CAAC,CAAC;EAEvBE,SAAS,CAAC,MAAM;IACZ,MAAMwB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,4BAA4B,CAAC;QAC9DR,OAAO,CAACO,QAAQ,CAACR,IAAI,CAAC;MAC1B,CAAC,CAAC,OAAOU,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAClC;IACJ,CAAC;IACDH,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAERxB,SAAS,CAAC,MAAM;IACZ,MAAM6B,UAAU,GAAGZ,IAAI,CAACa,GAAG,CAAEC,IAAI,KAAM;MACnCC,OAAO,EAAE,CAACD,IAAI,CAACE,GAAG,EAAEF,IAAI,CAACG,GAAG,CAAC;MAC7BC,KAAK,EAAEJ,IAAI,CAACK,KAAK,CAAE;IACvB,CAAC,CAAC,CAAC;;IACHhB,UAAU,CAACS,UAAU,CAAC;EAC1B,CAAC,EAAE,CAACZ,IAAI,CAAC,CAAC;EAEV,MAAMoB,UAAU,GAAG,IAAI9B,IAAI,CAAC;IACxB+B,OAAO,EAAEC,OAAO,CAAC,uBAAuB,CAAC;IACzCC,QAAQ,EAAE,CAAC,EAAE,EAAE,EAAE;EACrB,CAAC,CAAC;EAEF,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,IAAIlB,MAAM,CAACmB,OAAO,EAAE;MAChBnB,MAAM,CAACmB,OAAO,CAACC,OAAO,CAAC9B,MAAM,EAAEC,IAAI,CAAC;IACxC;EACJ,CAAC;EAED,MAAM8B,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIrB,MAAM,CAACmB,OAAO,EAAE;MAChBpB,WAAW,CAACC,MAAM,CAACmB,OAAO,CAACG,SAAS,CAAC,CAAC,CAAC;IAC3C;EACJ,CAAC;EAED,oBACInC,OAAA;IAAKoC,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBrC,OAAA,CAACT,YAAY;MACTY,MAAM,EAAEA,MAAO;MACfC,IAAI,EAAEA,IAAK;MACXkC,GAAG,EAAEzB,MAAO;MACZ0B,MAAM,EAAEL,aAAc;MAAAG,QAAA,gBAEtBrC,OAAA,CAACR,SAAS;QACNgD,WAAW,EAAC,yFAAyF;QACrGC,GAAG,EAAC;MAAoD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,eACF7C,OAAA,CAACL,kBAAkB;QAAA0C,QAAA,EACd5B,OAAO,CAACW,GAAG,CAAC,CAAC0B,MAAM,EAAEC,KAAK,kBACvB/C,OAAA,CAACP,MAAM;UAAakB,QAAQ,EAAEmC,MAAM,CAACxB,OAAQ;UAAC0B,IAAI,EAAErB,UAAW;UAAAU,QAAA,eAC3DrC,OAAA,CAACN,KAAK;YAAA2C,QAAA,EAAES,MAAM,CAACrB;UAAK;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC,GADpBE,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACc,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACX,CAAC,eACf7C,OAAA;MAAAqC,QAAA,GACK1B,QAAQ,iBACLX,OAAA,CAAAE,SAAA;QAAAmC,QAAA,GAAE,YAAU,EAAC1B,QAAQ,CAACsC,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,EAAC,eAAa,EAACvC,QAAQ,CAACwC,GAAG,CAACD,OAAO,CAAC,CAAC,CAAC,EAAC,GAAC;MAAA,eAAE,CACjF,eACDlD,OAAA;QAAQoD,OAAO,EAAErB,gBAAiB;QAAAM,QAAA,EAAC;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACJ7C,OAAA,CAACJ,IAAI;MAACqD,GAAG,EAAEtC,QAAQ,CAACsC,GAAG,CAACC,OAAO,CAAC,CAAC,CAAE;MAACG,IAAI,EAAE1C,QAAQ,CAACwC,GAAG,CAACD,OAAO,CAAC,CAAC;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEd;AAACvC,EAAA,CAxEuBD,cAAc;AAAAiD,EAAA,GAAdjD,cAAc;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}