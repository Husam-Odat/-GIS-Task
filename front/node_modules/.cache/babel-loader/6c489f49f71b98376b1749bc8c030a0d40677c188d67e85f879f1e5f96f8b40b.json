{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\husam\\\\Desktop\\\\arc gis task\\\\newinfograph\\\\src\\\\App1.js\",\n  _s = $RefreshSig$();\nimport \"./styles.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport { useState, useRef, useMemo, useCallback, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\nimport Form from './Form';\nimport { Icon, divIcon, point } from \"leaflet\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst center = [31.951591711679697, 35.93934368582822];\nconst zoom = 19;\nexport default function App1() {\n  _s();\n  const [data, setData] = useState([]);\n  const [markers, setMarkers] = useState([]);\n  const [position, setPosition] = useState(center); // Initialize position state\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/maps');\n        setData(response.data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchData();\n  }, []); // Only run once when the component mounts\n\n  useEffect(() => {\n    const newMarkers = data.map(item => ({\n      geocode: [item.LAT, item.LNG],\n      popUp: item.Notes // Use item.Notes for popup content\n    }));\n\n    setMarkers(newMarkers);\n  }, [data]);\n  const customIcon = new Icon({\n    iconUrl: require(\"./img/google-maps.png\"),\n    iconSize: [38, 38]\n  });\n  const [map, setMap] = useState(null);\n  useEffect(() => {\n    if (map) {\n      map.on('move', () => {\n        setPosition(map.getCenter()); // Update position state\n      });\n    }\n  }, [map]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"suctionMap\",\n    children: [map ? /*#__PURE__*/_jsxDEV(DisplayPosition, {\n      map: map,\n      position: position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this) : null, /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: center,\n      zoom: zoom,\n      ref: setMap,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n        children: markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: marker.geocode,\n          icon: customIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: marker.popUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      position: position\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n}\n_s(App1, \"D5W7y5X/tSGRP1xb/H8DdDrUf+8=\");\n_c = App1;\nvar _c;\n$RefreshReg$(_c, \"App1\");","map":{"version":3,"names":["useState","useRef","useMemo","useCallback","useEffect","MapContainer","TileLayer","Marker","Popup","MarkerClusterGroup","Form","Icon","divIcon","point","axios","jsxDEV","_jsxDEV","center","zoom","App1","_s","data","setData","markers","setMarkers","position","setPosition","fetchData","response","get","error","console","newMarkers","map","item","geocode","LAT","LNG","popUp","Notes","customIcon","iconUrl","require","iconSize","setMap","on","getCenter","className","children","DisplayPosition","fileName","_jsxFileName","lineNumber","columnNumber","ref","attribution","url","marker","index","icon","_c","$RefreshReg$"],"sources":["C:/Users/husam/Desktop/arc gis task/newinfograph/src/App1.js"],"sourcesContent":["import \"./styles.css\";\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { useState, useRef, useMemo, useCallback, useEffect } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\r\nimport MarkerClusterGroup from \"react-leaflet-cluster\";\r\nimport Form from './Form';\r\nimport { Icon, divIcon, point } from \"leaflet\";\r\nimport axios from 'axios';\r\n\r\nconst center = [31.951591711679697, 35.93934368582822];\r\nconst zoom = 19;\r\n\r\nexport default function App1() {\r\n    const [data, setData] = useState([]);\r\n    const [markers, setMarkers] = useState([]);\r\n    const [position, setPosition] = useState(center); // Initialize position state\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:3001/maps');\r\n                setData(response.data);\r\n            } catch (error) {\r\n                console.error('Error:', error);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, []); // Only run once when the component mounts\r\n\r\n    useEffect(() => {\r\n        const newMarkers = data.map((item) => ({\r\n            geocode: [item.LAT, item.LNG],\r\n            popUp: item.Notes, // Use item.Notes for popup content\r\n        }));\r\n        setMarkers(newMarkers);\r\n    }, [data]);\r\n\r\n    const customIcon = new Icon({\r\n        iconUrl: require(\"./img/google-maps.png\"),\r\n        iconSize: [38, 38],\r\n    });\r\n\r\n    const [map, setMap] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (map) {\r\n            map.on('move', () => {\r\n                setPosition(map.getCenter()); // Update position state\r\n            });\r\n        }\r\n    }, [map]);\r\n\r\n    return (\r\n        <div className=\"suctionMap\">\r\n            {map ? <DisplayPosition map={map} position={position} /> : null}\r\n            <MapContainer\r\n                center={center}\r\n                zoom={zoom}\r\n                ref={setMap}\r\n            >\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                <MarkerClusterGroup>\r\n                    {markers.map((marker, index) => (\r\n                        <Marker key={index} position={marker.geocode} icon={customIcon}>\r\n                            <Popup>{marker.popUp}</Popup>\r\n                        </Marker>\r\n                    ))}\r\n                </MarkerClusterGroup>\r\n            </MapContainer>\r\n            <Form position={position} /> {/* Pass position state to Form */}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}