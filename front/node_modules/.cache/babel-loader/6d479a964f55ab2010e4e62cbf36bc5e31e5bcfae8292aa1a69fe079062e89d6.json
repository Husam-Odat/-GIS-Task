{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\husam\\\\Desktop\\\\arc gis task\\\\newinfograph\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { Icon, point, divIcon } from \"leaflet\";\nimport MarkerClusterGroup from 'react-leaflet-cluster';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [data, setData] = useState([]);\n  const [markers, setMarkers] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/maps');\n        setData(response.data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchData();\n  }, [data]);\n  useEffect(() => {\n    const newMarkers = data.map(item => ({\n      geocode: [item.LAT, item.LNG],\n      popUp: `${data.Notes}`\n    }));\n    setMarkers(newMarkers);\n  }, [data]);\n  const customIcon = new Icon({\n    iconUrl: require(\"./img/google-maps.png\"),\n    iconSize: [38, 38]\n  });\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [48.8566, 2.3522],\n    zoom: 13,\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MarkerClusterGroup, {\n      children: markers.map((marker, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: marker.geocode,\n        icon: customIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"'hallo'\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapdot\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"%publicurl%/img/google-maps.png\",\n        alt: \"Google Maps Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"K3t38VEjn/rSHId2RIxA6e57TEA=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","Icon","point","divIcon","MarkerClusterGroup","axios","jsxDEV","_jsxDEV","App","_s","data","setData","markers","setMarkers","fetchData","response","get","error","console","newMarkers","map","item","geocode","LAT","LNG","popUp","Notes","customIcon","iconUrl","require","iconSize","center","zoom","style","height","children","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","marker","index","position","icon","className","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/husam/Desktop/arc gis task/newinfograph/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './styles.css';\nimport \"leaflet/dist/leaflet.css\";\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport { Icon, point, divIcon } from \"leaflet\";\nimport MarkerClusterGroup from 'react-leaflet-cluster';\nimport axios from 'axios';\n\n\n\nexport default function App() {\n  const [data, setData] = useState([]);\n  const [markers, setMarkers] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/maps');\n        setData(response.data);\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    };\n    fetchData();\n  }, [data]);\n\n  useEffect(() => {\n    const newMarkers = data.map((item) => ({\n      geocode: [item.LAT, item.LNG],\n      popUp: `${data.Notes}`,\n    }));\n    setMarkers(newMarkers);\n  }, [data]);\n\n  const customIcon = new Icon({\n    iconUrl: require(\"./img/google-maps.png\"),\n    iconSize: [38, 38],\n  });\n\n  return (\n    <MapContainer center={[48.8566, 2.3522]} zoom={13} style={{ height: \"100vh\" }} >\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n      />\n      <MarkerClusterGroup>\n        {markers.map((marker, index) => (\n          <Marker key={index} position={marker.geocode} icon={customIcon}   >\n            {/* <Popup>{marker.popUp}</Popup> */}\n            <Popup>'hallo'</Popup>\n          </Marker>\n        ))}\n      </MarkerClusterGroup>\n      <div className='mapdot'><img src='%publicurl%/img/google-maps.png' alt='Google Maps Icon' />\n\n </div>\n    </MapContainer>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}